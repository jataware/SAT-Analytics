# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.corr import Corr  # noqa: F401,E501
from openapi_server.models.id import Id  # noqa: F401,E501
from openapi_server.models.ids import Ids  # noqa: F401,E501
from openapi_server import util


class CorrAll(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: Id=None, correlators: List[str]=None):  # noqa: E501
        """CorrAll - a model defined in OpenAPI

        :param id: The id of this CorrAll.  # noqa: E501
        :type id: Id
        :param correlators: The correlators of this CorrAll.  # noqa: E501
        :type correlators: List[str]
        """
        self.openapi_types = {
            'id': Id,
            'correlators': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'correlators': 'correlators'
        }

        self._id = id
        self._correlators = correlators

    @classmethod
    def from_dict(cls, dikt) -> 'CorrAll':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The corr_all of this CorrAll.  # noqa: E501
        :rtype: CorrAll
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> Id:
        """Gets the id of this CorrAll.


        :return: The id of this CorrAll.
        :rtype: Id
        """
        return self._id

    @id.setter
    def id(self, id: Id):
        """Sets the id of this CorrAll.


        :param id: The id of this CorrAll.
        :type id: Id
        """

        self._id = id

    @property
    def correlators(self) -> List[str]:
        """Gets the correlators of this CorrAll.


        :return: The correlators of this CorrAll.
        :rtype: List[str]
        """
        return self._correlators

    @correlators.setter
    def correlators(self, correlators: List[str]):
        """Sets the correlators of this CorrAll.


        :param correlators: The correlators of this CorrAll.
        :type correlators: List[str]
        """
        if correlators is None:
            raise ValueError("Invalid value for `correlators`, must not be `None`")  # noqa: E501

        self._correlators = correlators
