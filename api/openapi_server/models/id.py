# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.idx import Idx  # noqa: F401,E501
from openapi_server import util


class Id(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id1: Idx=None, id2: Idx=None):  # noqa: E501
        """Id - a model defined in OpenAPI

        :param id1: The id1 of this Id.  # noqa: E501
        :type id1: Idx
        :param id2: The id2 of this Id.  # noqa: E501
        :type id2: Idx
        """
        self.openapi_types = {
            'id1': Idx,
            'id2': Idx
        }

        self.attribute_map = {
            'id1': 'id1',
            'id2': 'id2'
        }

        self._id1 = id1
        self._id2 = id2

    @classmethod
    def from_dict(cls, dikt) -> 'Id':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The id of this Id.  # noqa: E501
        :rtype: Id
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id1(self) -> Idx:
        """Gets the id1 of this Id.


        :return: The id1 of this Id.
        :rtype: Idx
        """
        return self._id1

    @id1.setter
    def id1(self, id1: Idx):
        """Sets the id1 of this Id.


        :param id1: The id1 of this Id.
        :type id1: Idx
        """
        if id1 is None:
            raise ValueError("Invalid value for `id1`, must not be `None`")  # noqa: E501

        self._id1 = id1

    @property
    def id2(self) -> Idx:
        """Gets the id2 of this Id.


        :return: The id2 of this Id.
        :rtype: Idx
        """
        return self._id2

    @id2.setter
    def id2(self, id2: Idx):
        """Sets the id2 of this Id.


        :param id2: The id2 of this Id.
        :type id2: Idx
        """

        self._id2 = id2
